import { Link, useSearchParams } from 'react-router-dom';

const navigationData = [
    {
        title: "–ß–∞—Å / –°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å:",
        queryKey: "timeToCook",
        items: [
            { label: "‚ö° –®–≤–∏–¥–∫–µ", value: "quick" },
            { label: "üõí –ü—Ä–æ—Å—Ç—ñ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏", value: "simple-ingredients" },
        ],
    },
    {
        title: "–¢–∏–ø —Å—Ç—Ä–∞–≤–∏:",
        queryKey: "categories",
        items: [
            { label: "üç≥ –°–Ω—ñ–¥–∞–Ω–æ–∫", value: "—Å–Ω—ñ–¥–∞–Ω–æ–∫" },
            { label: "ü•ò –û–±—ñ–¥", value: "–æ–±—ñ–¥" },
            { label: "üåô –í–µ—á–µ—Ä—è", value: "–≤–µ—á–µ—Ä—è" },
            { label: "ü•ó –°–∞–ª–∞—Ç", value: "—Å–∞–ª–∞—Ç" },
            { label: "üç∞ –î–µ—Å–µ—Ä—Ç", value: "–¥–µ—Å–µ—Ä—Ç" },
            { label: "ü•© –ü–∞—à—Ç–µ—Ç", value: "–ø–∞—à—Ç–µ—Ç" },
            { label: "ü•ñ –ù–∞–º–∞–∑–∫–∞", value: "–Ω–∞–º–∞–∑–∫–∞" },
            { label: "üßÅ –í–∏–ø—ñ—á–∫–∞", value: "–≤–∏–ø—ñ—á–∫–∞" },
            { label: "üçû –¢—ñ—Å—Ç–æ", value: "—Ç—ñ—Å—Ç–æ" },
            { label: "üî• –ì—Ä–∏–ª—å", value: "–≥—Ä–∏–ª—å" },
        ],
    },
    {
        title: "–î—ñ—î—Ç–∞:",
        queryKey: "categories",
        items: [
            { label: "ü•¨ –í–µ–≥–∞–Ω—Å—å–∫–µ", value: "–≤–µ–≥–∞–Ω—Å—å–∫–µ" },
            { label: "üåæ –ü—ñ—Å–Ω–µ", value: "–ø—ñ—Å–Ω–µ" },
            { label: "üåæ –ë–µ–∑–≥–ª—é—Ç–µ–Ω–æ–≤–µ üö´", value: "–±–µ–∑–≥–ª—é—Ç–µ–Ω–æ–≤–µ" },
            { label: "üç¨ –ë–µ–∑—Ü—É–∫—Ä–æ–≤–µ üö´", value: "–±–µ–∑—Ü—É–∫—Ä–æ–≤–µ" },
            { label: "üìâ –ù–∏–∑—å–∫–æ–∫–∞–ª–æ—Ä—ñ–π–Ω–µ", value: "–Ω–∏–∑—å–∫–æ–∫–∞–ª–æ—Ä—ñ–π–Ω–µ" },
            { label: "‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤–µ", value: "–∑–¥–æ—Ä–æ–≤–µ" },
            { label: "üèãÔ∏è‚Äç‚ôÄÔ∏è –§—ñ—Ç–Ω–µ—Å", value: "—Ñ—ñ—Ç–Ω–µ—Å" },
            { label: "üßí –î–∏—Ç—è—á–µ", value: "–¥–∏—Ç—è—á–µ" },
        ],
    },
    {
        title: "–ü–æ–¥—ñ—ó / –°–µ–∑–æ–Ω–Ω—ñ—Å—Ç—å:",
        queryKey: "categories",
        items: [
            { label: "üéÇ –°–≤—è—Ç–∫–æ–≤–µ", value: "—Å–≤—è—Ç–∫–æ–≤–µ" },
            { label: "üèï –ù–∞ –ø—Ä–∏—Ä–æ–¥—ñ", value: "–Ω–∞ –ø—Ä–∏—Ä–æ–¥—ñ" },
            { label: "üåû –õ—ñ—Ç–Ω—î", value: "–ª—ñ—Ç–Ω—î" },
            { label: "üçÇ –û—Å—ñ–Ω–Ω—î", value: "–æ—Å—ñ–Ω–Ω—î" },
            { label: "üî• –ì–∞—Ä—è—á–µ", value: "–≥–∞—Ä—è—á–µ" },
            { label: "‚ùÑÔ∏è –•–æ–ª–æ–¥–Ω–µ", value: "—Ö–æ–ª–æ–¥–Ω–µ" },
        ],
    },
];

function NavLink({ to, children, isActive, isSpecial }) {
    const specialActiveClasses = "text-red-500 font-bold underline";
    const defaultActiveClasses = "text-orange-500 font-bold underline";
    const inactiveClasses = "hover:text-orange-400";

    const activeClasses = isSpecial ? specialActiveClasses : defaultActiveClasses;
    const finalClasses = isActive ? activeClasses : inactiveClasses;

    return (
        <Link to={to} className={`transition-colors ${finalClasses}`}>
            {children}
        </Link>
    );
}

export function Navigation() {
    const [searchParams] = useSearchParams();

    const createLink = (key, value) => {
        const newParams = new URLSearchParams(searchParams);
        if (newParams.get(key) === value) {
            newParams.delete(key);
        } else {
            newParams.set(key, value);
        }
        newParams.set('page', '1');
        return `/?${newParams.toString()}`;
    };

    return (
        <nav className="border-dashed border-2 rounded-2xl p-4">
            <ul className="font-bold text-2xl space-y-4">
                {navigationData.map((section) => {
                    const isSpecialSection = section.title === "–ß–∞—Å / –°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å:";
                    return (
                        <li key={section.title}>
                            <span className={isSpecialSection ? 'text-orange-400' : ''}>
                                {section.title}
                            </span>
                            <ul className="font-normal text-gray-700 text-xl space-y-2 pl-3 mt-2">
                                {section.items.map((item) => (
                                    <li key={item.value}>
                                        <NavLink
                                            to={createLink(section.queryKey, item.value)}
                                            isActive={searchParams.get(section.queryKey) === item.value}
                                            isSpecial={isSpecialSection}
                                        >
                                            {item.label}
                                        </NavLink>
                                    </li>
                                ))}
                            </ul>
                        </li>
                    );
                })}
            </ul>
        </nav>
    );
}